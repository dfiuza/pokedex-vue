{"remainingRequest":"C:\\Users\\User\\Desktop\\pokedex\\node_modules\\babel-loader\\lib\\index.js!C:\\Users\\User\\Desktop\\pokedex\\node_modules\\cache-loader\\dist\\cjs.js??ref--1-0!C:\\Users\\User\\Desktop\\pokedex\\node_modules\\vue-loader\\lib\\index.js??vue-loader-options!C:\\Users\\User\\Desktop\\pokedex\\src\\components\\PokemonInfoDialog.vue?vue&type=script&lang=js&","dependencies":[{"path":"C:\\Users\\User\\Desktop\\pokedex\\src\\components\\PokemonInfoDialog.vue","mtime":1645803356000},{"path":"C:\\Users\\User\\Desktop\\pokedex\\babel.config.js","mtime":1645803356000},{"path":"C:\\Users\\User\\Desktop\\pokedex\\node_modules\\cache-loader\\dist\\cjs.js","mtime":1690395738295},{"path":"C:\\Users\\User\\Desktop\\pokedex\\node_modules\\babel-loader\\lib\\index.js","mtime":1690395739524},{"path":"C:\\Users\\User\\Desktop\\pokedex\\node_modules\\cache-loader\\dist\\cjs.js","mtime":1690395738295},{"path":"C:\\Users\\User\\Desktop\\pokedex\\node_modules\\vue-loader\\lib\\index.js","mtime":1690395739746}],"contextDependencies":[],"result":[{"type":"Buffer","data":"base64:aW1wb3J0IF9jcmVhdGVGb3JPZkl0ZXJhdG9ySGVscGVyIGZyb20gIkM6L1VzZXJzL1VzZXIvRGVza3RvcC9wb2tlZGV4L25vZGVfbW9kdWxlcy9AYmFiZWwvcnVudGltZS9oZWxwZXJzL2VzbS9jcmVhdGVGb3JPZkl0ZXJhdG9ySGVscGVyLmpzIjsKaW1wb3J0ICJjb3JlLWpzL21vZHVsZXMvZXMuZnVuY3Rpb24ubmFtZS5qcyI7CmltcG9ydCAiY29yZS1qcy9tb2R1bGVzL2VzLmFycmF5LnNsaWNlLmpzIjsKaW1wb3J0ICJjb3JlLWpzL21vZHVsZXMvZXMucmVnZXhwLmV4ZWMuanMiOwppbXBvcnQgImNvcmUtanMvbW9kdWxlcy9lcy5zdHJpbmcuc3BsaXQuanMiOwppbXBvcnQgImNvcmUtanMvbW9kdWxlcy9lcy5hcnJheS5zb3J0LmpzIjsKLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KaW1wb3J0IE1vdmVNZXRob2RJbWFnZSBmcm9tICIuL01vdmVNZXRob2RJbWFnZS52dWUiOwppbXBvcnQgRXZvbHV0aW9uQ2hhaW4gZnJvbSAiLi9Fdm9sdXRpb25DaGFpbi52dWUiOwppbXBvcnQgU3RhdHMgZnJvbSAiLi9TdGF0cy52dWUiOwppbXBvcnQgUG9rZW1vblR5cGUgZnJvbSAiLi9Qb2tlbW9uVHlwZS52dWUiOwpleHBvcnQgZGVmYXVsdCB7CiAgY29tcG9uZW50czogewogICAgTW92ZU1ldGhvZEltYWdlOiBNb3ZlTWV0aG9kSW1hZ2UsCiAgICBFdm9sdXRpb25DaGFpbjogRXZvbHV0aW9uQ2hhaW4sCiAgICBTdGF0czogU3RhdHMsCiAgICBQb2tlbW9uVHlwZTogUG9rZW1vblR5cGUKICB9LAogIHByb3BzOiB7CiAgICBzaG93OiBCb29sZWFuLAogICAgc2VsZWN0ZWRfcG9rZW1vbjogT2JqZWN0CiAgfSwKICBtZXRob2RzOiB7CiAgICBnZXRfbmFtZTogZnVuY3Rpb24gZ2V0X25hbWUocG9rZW1vbikgewogICAgICByZXR1cm4gcG9rZW1vbi5uYW1lLmNoYXJBdCgwKS50b1VwcGVyQ2FzZSgpICsgcG9rZW1vbi5uYW1lLnNsaWNlKDEpOwogICAgfSwKICAgIHRyYW5zZm9ybV9tb3ZlX25hbWU6IGZ1bmN0aW9uIHRyYW5zZm9ybV9tb3ZlX25hbWUobmFtZSkgewogICAgICB2YXIgcmVzcG9uc2UgPSAiIjsKCiAgICAgIHZhciBfaXRlcmF0b3IgPSBfY3JlYXRlRm9yT2ZJdGVyYXRvckhlbHBlcihuYW1lLnNwbGl0KCItIikpLAogICAgICAgICAgX3N0ZXA7CgogICAgICB0cnkgewogICAgICAgIGZvciAoX2l0ZXJhdG9yLnMoKTsgIShfc3RlcCA9IF9pdGVyYXRvci5uKCkpLmRvbmU7KSB7CiAgICAgICAgICB2YXIgcGFydCA9IF9zdGVwLnZhbHVlOwogICAgICAgICAgcmVzcG9uc2UgKz0gcGFydC5jaGFyQXQoMCkudG9VcHBlckNhc2UoKSArIHBhcnQuc2xpY2UoMSkgKyAiICI7CiAgICAgICAgfQogICAgICB9IGNhdGNoIChlcnIpIHsKICAgICAgICBfaXRlcmF0b3IuZShlcnIpOwogICAgICB9IGZpbmFsbHkgewogICAgICAgIF9pdGVyYXRvci5mKCk7CiAgICAgIH0KCiAgICAgIHJldHVybiByZXNwb25zZTsKICAgIH0KICB9LAogIGNvbXB1dGVkOiB7CiAgICBtb3ZlczogZnVuY3Rpb24gbW92ZXMoKSB7CiAgICAgIHZhciByZXNwb25zZSA9IHsKICAgICAgICAibGV2ZWwtdXAiOiBbXSwKICAgICAgICBlZ2c6IFtdLAogICAgICAgIG1hY2hpbmU6IFtdLAogICAgICAgIHR1dG9yOiBbXQogICAgICB9OwoKICAgICAgdmFyIF9pdGVyYXRvcjIgPSBfY3JlYXRlRm9yT2ZJdGVyYXRvckhlbHBlcih0aGlzLnNlbGVjdGVkX3Bva2Vtb24ubW92ZXMpLAogICAgICAgICAgX3N0ZXAyOwoKICAgICAgdHJ5IHsKICAgICAgICBmb3IgKF9pdGVyYXRvcjIucygpOyAhKF9zdGVwMiA9IF9pdGVyYXRvcjIubigpKS5kb25lOykgewogICAgICAgICAgdmFyIG1vdmUgPSBfc3RlcDIudmFsdWU7CgogICAgICAgICAgdmFyIF9pdGVyYXRvcjMgPSBfY3JlYXRlRm9yT2ZJdGVyYXRvckhlbHBlcihtb3ZlLnZlcnNpb25fZ3JvdXBfZGV0YWlscyksCiAgICAgICAgICAgICAgX3N0ZXAzOwoKICAgICAgICAgIHRyeSB7CiAgICAgICAgICAgIGZvciAoX2l0ZXJhdG9yMy5zKCk7ICEoX3N0ZXAzID0gX2l0ZXJhdG9yMy5uKCkpLmRvbmU7KSB7CiAgICAgICAgICAgICAgdmFyIGRldGFpbHMgPSBfc3RlcDMudmFsdWU7CgogICAgICAgICAgICAgIGlmIChkZXRhaWxzLnZlcnNpb25fZ3JvdXAubmFtZSA9PSAic3dvcmQtc2hpZWxkIikgewogICAgICAgICAgICAgICAgcmVzcG9uc2VbZGV0YWlscy5tb3ZlX2xlYXJuX21ldGhvZC5uYW1lXS5wdXNoKHsKICAgICAgICAgICAgICAgICAgbGV2ZWw6IGRldGFpbHMubGV2ZWxfbGVhcm5lZF9hdCwKICAgICAgICAgICAgICAgICAgbWV0aG9kOiBkZXRhaWxzLm1vdmVfbGVhcm5fbWV0aG9kLm5hbWUsCiAgICAgICAgICAgICAgICAgIG5hbWU6IHRoaXMudHJhbnNmb3JtX21vdmVfbmFtZShtb3ZlLm1vdmUubmFtZSkKICAgICAgICAgICAgICAgIH0pOwogICAgICAgICAgICAgICAgYnJlYWs7CiAgICAgICAgICAgICAgfQogICAgICAgICAgICB9CiAgICAgICAgICB9IGNhdGNoIChlcnIpIHsKICAgICAgICAgICAgX2l0ZXJhdG9yMy5lKGVycik7CiAgICAgICAgICB9IGZpbmFsbHkgewogICAgICAgICAgICBfaXRlcmF0b3IzLmYoKTsKICAgICAgICAgIH0KICAgICAgICB9CiAgICAgIH0gY2F0Y2ggKGVycikgewogICAgICAgIF9pdGVyYXRvcjIuZShlcnIpOwogICAgICB9IGZpbmFsbHkgewogICAgICAgIF9pdGVyYXRvcjIuZigpOwogICAgICB9CgogICAgICBmb3IgKHZhciBtb3ZlX3R5cGUgaW4gcmVzcG9uc2UpIHsKICAgICAgICByZXNwb25zZVttb3ZlX3R5cGVdLnNvcnQoZnVuY3Rpb24gKGEsIGIpIHsKICAgICAgICAgIHZhciBsZXZlbF9hID0gYS5sZXZlbDsKICAgICAgICAgIHZhciBsZXZlbF9iID0gYi5sZXZlbDsKCiAgICAgICAgICBpZiAobGV2ZWxfYSA9PSAwKSB7CiAgICAgICAgICAgIGxldmVsX2EgPSAxMDAwOwogICAgICAgICAgfQoKICAgICAgICAgIGlmIChsZXZlbF9iID09IDApIHsKICAgICAgICAgICAgbGV2ZWxfYiA9IDEwMDA7CiAgICAgICAgICB9CgogICAgICAgICAgaWYgKGxldmVsX2EgIT0gbGV2ZWxfYikgewogICAgICAgICAgICBpZiAobGV2ZWxfYSA8IGxldmVsX2IpIHsKICAgICAgICAgICAgICByZXR1cm4gLTE7CiAgICAgICAgICAgIH0gZWxzZSB7CiAgICAgICAgICAgICAgcmV0dXJuIDE7CiAgICAgICAgICAgIH0KICAgICAgICAgIH0gZWxzZSB7CiAgICAgICAgICAgIGlmIChhLm1ldGhvZCA8IGIubWV0aG9kKSB7CiAgICAgICAgICAgICAgcmV0dXJuIC0xOwogICAgICAgICAgICB9IGVsc2UgewogICAgICAgICAgICAgIHJldHVybiAxOwogICAgICAgICAgICB9CiAgICAgICAgICB9CiAgICAgICAgfSk7CiAgICAgIH0KCiAgICAgIHJldHVybiByZXNwb25zZTsKICAgIH0KICB9LAogIHdhdGNoOiB7CiAgICBzaG93OiBmdW5jdGlvbiBzaG93KCkgewogICAgICB0aGlzLiRlbWl0KCJ1cGRhdGU6c2hvdyIsIHRoaXMuc2hvdyk7CiAgICB9CiAgfQp9Ow=="},{"version":3,"mappings":";;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;AAqGA;AACA;AACA;AACA;AAEA;AACAA;AACAC,oCADA;AAEAC,kCAFA;AAGAC,gBAHA;AAIAC;AAJA,GADA;AAOAC;AACAC,iBADA;AAEAC;AAFA,GAPA;AAWAC;AACAC,YADA,oBACAC,OADA,EACA;AACA;AACA,KAHA;AAIAC,uBAJA,+BAIAC,IAJA,EAIA;AACA;;AADA,iDAEAA,eAFA;AAAA;;AAAA;AAEA;AAAA;AACAC;AACA;AAJA;AAAA;AAAA;AAAA;AAAA;;AAKA;AACA;AAVA,GAXA;AAuBAC;AACAC,SADA,mBACA;AACA;AAAA;AAAAC;AAAAC;AAAAC;AAAA;;AADA,kDAEA,2BAFA;AAAA;;AAAA;AAEA;AAAA;;AAAA,sDACAC,0BADA;AAAA;;AAAA;AACA;AAAA;;AACA;AACAN;AACAO,iDADA;AAEAC,wDAFA;AAGAT;AAHA;AAKA;AACA;AACA;AAVA;AAAA;AAAA;AAAA;AAAA;AAWA;AAbA;AAAA;AAAA;AAAA;AAAA;;AAeA;AACAC;AACA;AACA;;AAEA;AACAS;AACA;;AAEA;AACAC;AACA;;AAEA;AACA;AACA;AACA,aAFA,MAEA;AACA;AACA;AACA,WANA,MAMA;AACA;AACA;AACA,aAFA,MAEA;AACA;AACA;AACA;AACA,SAzBA;AA0BA;;AAEA;AACA;AA9CA,GAvBA;AAuEAC;AACAlB,QADA,kBACA;AACA;AACA;AAHA;AAvEA","names":["components","MoveMethodImage","EvolutionChain","Stats","PokemonType","props","show","selected_pokemon","methods","get_name","pokemon","transform_move_name","name","response","computed","moves","egg","machine","tutor","move","level","method","level_a","level_b","watch"],"sourceRoot":"src/components","sources":["PokemonInfoDialog.vue"],"sourcesContent":["<template>\n  <v-dialog v-model=\"show\" width=\"800\">\n    <v-card v-if=\"selected_pokemon\" class=\"px-4\">\n      <v-container>\n        <v-row class=\"d-flex align-center\">\n          <v-col cols=\"12\" md=\"4\">\n            <img\n              :src=\"`https://raw.githubusercontent.com/PokeAPI/sprites/master/sprites/pokemon/${selected_pokemon.id}.png`\"\n              :alt=\"selected_pokemon.name\"\n              width=\"80%\"\n            />\n          </v-col>\n          <v-col cols=\"12\" md=\"8\">\n            <h1>{{ get_name(selected_pokemon) }}</h1>\n            <PokemonType\n              v-for=\"type in selected_pokemon.types\"\n              :key=\"type.slot\"\n              :type=\"type.type.name\"\n            />\n\n            <v-divider class=\"my-4\"> </v-divider>\n            <v-chip label\n              >Height {{ selected_pokemon.height * 2.54 }} cm</v-chip\n            >\n            <v-chip label class=\"ml-2\"\n              >Weight\n              {{ (selected_pokemon.weight * 0.45359237).toFixed(0) }}\n              kgs</v-chip\n            >\n          </v-col>\n        </v-row>\n\n        <h2 class=\"mt-4\">Stats</h2>\n\n        <Stats class=\"mt-2\" :pokemon=\"selected_pokemon\" />\n\n        <h2 class=\"mt-6 mb-4\">Moves</h2>\n\n        <v-expansion-panels class=\"mb-4\">\n          <v-expansion-panel\n            v-for=\"move_type in ['level-up', 'egg', 'machine', 'tutor']\"\n            :key=\"move_type\"\n          >\n            <v-expansion-panel-header>\n              {{ move_type }}\n            </v-expansion-panel-header>\n            <v-expansion-panel-content>\n              <v-simple-table>\n                <template>\n                  <thead>\n                    <tr>\n                      <th class=\"text-left\">Level</th>\n                      <th class=\"text-left\">Method</th>\n                      <th class=\"text-left\">Name</th>\n                    </tr>\n                  </thead>\n                  <tbody>\n                    <tr v-for=\"move in moves[move_type]\" :key=\"move.name\">\n                      <td>\n                        <span v-show=\"move.level != 0\">{{ move.level }}</span>\n                      </td>\n                      <td><MoveMethodImage :method=\"move.method\" /></td>\n                      <td>{{ move.name }}</td>\n                    </tr>\n                  </tbody>\n                </template>\n              </v-simple-table>\n            </v-expansion-panel-content>\n          </v-expansion-panel>\n        </v-expansion-panels>\n\n        <!-- <v-simple-table>\n          <template>\n            <thead>\n              <tr>\n                <th class=\"text-left\">Level</th>\n                <th class=\"text-left\">Method</th>\n                <th class=\"text-left\">Name</th>\n              </tr>\n            </thead>\n            <tbody>\n              <tr v-for=\"move in moves\" :key=\"move.name\">\n                <td>\n                  <span v-show=\"move.level != 0\">{{ move.level }}</span>\n                </td>\n                <td><MoveMethodImage :method=\"move.method\" /></td>\n                <td>{{ move.name }}</td>\n              </tr>\n            </tbody>\n          </template>\n        </v-simple-table> -->\n\n        <h2>Evolution</h2>\n\n        <EvolutionChain :pokemon=\"selected_pokemon\" />\n      </v-container>\n    </v-card>\n  </v-dialog>\n</template>\n\n<script>\nimport MoveMethodImage from \"./MoveMethodImage.vue\";\nimport EvolutionChain from \"./EvolutionChain.vue\";\nimport Stats from \"./Stats.vue\";\nimport PokemonType from \"./PokemonType.vue\";\n\nexport default {\n  components: {\n    MoveMethodImage,\n    EvolutionChain,\n    Stats,\n    PokemonType,\n  },\n  props: {\n    show: Boolean,\n    selected_pokemon: Object,\n  },\n  methods: {\n    get_name(pokemon) {\n      return pokemon.name.charAt(0).toUpperCase() + pokemon.name.slice(1);\n    },\n    transform_move_name(name) {\n      let response = \"\";\n      for (let part of name.split(\"-\")) {\n        response += part.charAt(0).toUpperCase() + part.slice(1) + \" \";\n      }\n      return response;\n    },\n  },\n  computed: {\n    moves() {\n      let response = { \"level-up\": [], egg: [], machine: [], tutor: [] };\n      for (let move of this.selected_pokemon.moves) {\n        for (let details of move.version_group_details) {\n          if (details.version_group.name == \"sword-shield\") {\n            response[details.move_learn_method.name].push({\n              level: details.level_learned_at,\n              method: details.move_learn_method.name,\n              name: this.transform_move_name(move.move.name),\n            });\n            break;\n          }\n        }\n      }\n\n      for (let move_type in response) {\n        response[move_type].sort((a, b) => {\n          let level_a = a.level;\n          let level_b = b.level;\n\n          if (level_a == 0) {\n            level_a = 1000;\n          }\n\n          if (level_b == 0) {\n            level_b = 1000;\n          }\n\n          if (level_a != level_b) {\n            if (level_a < level_b) {\n              return -1;\n            } else {\n              return 1;\n            }\n          } else {\n            if (a.method < b.method) {\n              return -1;\n            } else {\n              return 1;\n            }\n          }\n        });\n      }\n\n      return response;\n    },\n  },\n  watch: {\n    show() {\n      this.$emit(\"update:show\", this.show);\n    },\n  },\n};\n</script>\n\n<style lang=\"scss\" scoped></style>\n"]}]}